#lang planet neil/sicp
(define (product term a next b)
  (if (> a b)
      1
      (* (term a)
         (product term (next a) next b))))
(define (product2 term a next b)
  (define (iter a result)
    (if (> a b)
        result
        (iter (next a) (* (term a) result))))
  (iter a 1))
(define (inc n) (+ n 1))
(define (identity x) x)
(define (factorial n)
  (product identity 1 inc n))
;(factorial 6)

(define (pi n)
  (define (square x) (* x x))
  (define (inc n) (+ n 1))
  (define (term k)
    (if (even? k)
        (/ k (+ k 1))
        (/ (+ k 1) k)))
  (* 4.0 (product term 2 inc n))
; (* 4.0 (product2 term 2 inc n))
  )
(pi 10000)